#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Oct  2 15:39:52 2017

@author: elijahbarnes
"""
import numpy as np

Epsilon = 8.854187817e-12
print ("Please input your x variable ")
x = int(input())
print ("Please input your y variable ")
y = int(input())
print ("Please input your z variable ")
z = int(input())

def V(a):
    return (1/(4*np.pi*Epsilon))*(5*np.sin(a)**(2) + 4)**(.5)/(((x-3*np.cos(a))**(2)+(y-2*np.sin(a))**(2)+(z**(2)))**(.5))

def E(a):
    return (1/(4*np.pi*Epsilon))*(((x-3*np.cos(a))**(2)+(y-2*np.sin(a))**(2)+(z**(2))*(5*np.sin(a)**(2) + 4)**(.5))/(((x-3*np.cos(a))**(2)+(y-2*np.sin(a))**(2)+(z**(2)))**(3/2)))


def TrapE(a,b,h):
    
    N = int((b-a)/h)
    S_1 = 0
    Delta = 1e-6
    Epsilon = 1
    I_1 = 0
    I_2 = 0
    S_2 = 0
    for k in range (1,N,1):
            S_1+= E(a+k*h-Delta)
            
    I_1 = h*(E(a-Delta)/2 + E(b-Delta)/2 + S_1)
            
    while Epsilon > Delta:
        h= h/2
        N= 2*N
        for k in range (1,N,2):
            S_2+= E(a+k*h-Delta)
                    
        I_2 = I_1/2 + h*S_2
        Epsilon = (I_2-I_1)/3
        I_1 = I_2
                    
    return (I_1)

def TrapV(a,b,h):
    
    N = int((b-a)/h)
    S_1 = 0
    Delta = 1e-6
    Epsilon = 1
    I_1 = 0
    I_2 = 0
    S_2 = 0
    for k in range (1,N,1):
            S_1+= V(a+k*h-Delta)
            
    I_1 = h*(V(a-Delta)/2 + V(b-Delta)/2 + S_1)
            
    while Epsilon > Delta:
        h= h/2
        N= 2*N
        for k in range (1,N,2):
            S_2+= V(a+k*h-Delta)
                    
        I_2 = I_1/2 + h*S_2
        Epsilon = (I_2-I_1)/3
        I_1 = I_2
                    
    return (I_1)
print (TrapE(0,2*np.pi,.1),"is the Norm of the Electric Field")
print (TrapV(0,2*np.pi,.1),"is the Potential")