#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Dec  5 12:41:48 2017

@author: elijahbarnes
"""

import numpy as np
import pylab as py
import math as math

M = 100
error = 1
delta = 1e-6

def Eta(x,y):
    R_1 = 25
    R_2 = 75
    R = np.arctan((y - R_2) /( x - (R_2 - R_1))) - np.arctan((y - R_1) / (x - (R_2 - R_1)))
    return R

Phi = np.zeros([M,M],float)
Phi_prime = Phi

while error > delta:
    for x in range(0,M):
        for y in range(0,M):
            if x == 0 or y == 0 or x == 50 or x == M-1 or y == M-1:
                Phi_prime[x,y] = Phi[x,y]
            else:
                Phi_prime[x,y] = (Phi[x+1,y] + Phi[x,y+1] + Phi[x,y-1] + Phi[x-1,y])/4
                Phi_prime[x,y] = Phi_prime[x,y] + (1/10)*(.01**2) / 4*np.sin(2*(Phi[x,y]+Eta(x,y)))
            error = np.max(np.abs(Phi-Phi_prime))
        Phi,Phi_prime = Phi_prime,Phi
        
py.imshow(Phi)
py.spectral()
py.show()